{
	"compilerOptions": {
		"target": "ES6",

		/* Modules */
		"baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
		"module": "ESNext" /* Specify what module code is generated. */,
		"rootDirs": ["./src", "./prisma"],
		"types": ["node"],
		"resolveJsonModule": true,
		"moduleResolution": "Node16" /* Specify how TypeScript looks up a file from a given module specifier. */,

		/* JavaScript Support */
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
		"checkJs": true /* Enable error reporting in type-checked JavaScript files. */,

		"sourceMap": true /* Create source map files for emitted JavaScript files. */,
		"outDir": "./dist" /* Specify an output folder for all emitted files. */,

		/* Interop Constraints */
		"allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

		/* Type Checking */
		"strict": true /* Enable all strict type-checking options. */,
		"strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */
	},
	"exclude": ["node_modules", "dist"],
	"ts-node": {
		"compilerOptions": {
			"module": "CommonJS"
		}
	}
}
